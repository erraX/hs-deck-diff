{"version":3,"sources":["components/DeckCodeInput.module.scss","ui/TextArea.module.scss","components/DeckDiffContainer.module.scss","App.module.scss","components/Deck.module.scss","components/CardBrief.module.scss","constants/Rarity.ts","components/CardBrief.tsx","components/Deck.tsx","ui/TextArea.tsx","utils/noop.ts","utils/decodeDeckCode.ts","components/DeckCodeInput.tsx","hooks/useInput.ts","components/DeckDiffContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Rarity","RARITY_COLORS","COMMON","EPIC","RARE","LEGENDARY","CardBrief","id","name","cost","rarity","count","isAdd","isDelete","className","styles","cardBrief","data-for","data-tip","data-class","cardDetail","style","backgroundImage","place","type","effect","getContent","src","alt","info","backgroundColor","cls","mask","addMask","removeMask","Deck","cards","deck","map","card","add","delete","TextArea","defaultValue","disabled","error","placeholder","readOnly","value","onChange","textarea","evt","target","noop","decodeDeckCode","deckCodeStr","decode","replace","ex","console","DeckCodeInput","onDecode","initialValue","initialError","validate","onValidChange","useState","setValue","setError","handleInput","useCallback","validation","useInput","Input","InputErrorHint","reDiff","baseDeck","curDeck","newDeck","forEach","curCard","baseCard","find","t","uid","push","sort","a","b","Number","DeckDiffContainer","deck1","setDeck1","deck2","setDeck2","handleDecode","index","log","countMap","reduce","prev","cur","axios","post","ids","i","result","parsedCards","data","length","deckDiffContainer","deckContainer","App","Title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,MAAQ,6BAA6B,eAAiB,wC,mBCA7HD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,0B,mBCAhED,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,cAAgB,2C,mBCAnGD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,qB,mBCAjDD,EAAOC,QAAU,CAAC,KAAO,qB,uCCAzBD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,KAAO,wBAAwB,KAAO,wBAAwB,MAAQ,yBAAyB,IAAM,uBAAuB,KAAO,wBAAwB,QAAU,2BAA2B,WAAa,gC,2CCDvSC,E,0JAAAA,O,mBAAAA,I,eAAAA,I,yBAAAA,I,gBAAAA,M,kCCkBNC,GAAqC,mBACxCD,EAAOE,OAAS,WADwB,cAExCF,EAAOG,KAAO,WAF0B,cAGxCH,EAAOI,KAAO,WAH0B,cAIxCJ,EAAOK,UAAY,WAJqB,GA6C5BC,EAtC6B,SAAC,GAQtC,IAPLC,EAOI,EAPJA,GACAC,EAMI,EANJA,KACAC,EAKI,EALJA,KACAC,EAII,EAJJA,OAII,IAHJC,aAGI,MAHI,EAGJ,MAFJC,aAEI,aADJC,gBACI,SACJ,OACE,sBACCC,UAAWC,IAAOC,UAClBC,WAAA,sBAAyBV,GACzBW,YAAA,EACAC,aAAYJ,IAAOK,WACnBC,MAAO,CACLC,gBAAgB,gDAAD,OAAkDf,EAAlD,UANlB,UASE,cAAC,IAAD,CACEA,GAAE,sBAAiBA,GACnBgB,MAAM,QACNC,KAAK,QACLC,OAAO,QACPC,WAAY,kBAAM,qBAAKC,IAAG,qEAAgEpB,EAAhE,QAA0EqB,IAAI,YAE1G,sBAAMd,UAAWC,IAAOP,KAAxB,SAA+BA,IAC/B,sBACCM,UAAWC,IAAOc,KAClBR,MAAO,CAAES,gBAAiB7B,EAAcS,IAFzC,SAGED,IACAE,EAAQ,GAAK,sBAAMG,UAAWC,IAAOJ,MAAxB,SAAgCA,IAC9CC,GAAS,sBAAME,UAAWiB,IAAIhB,IAAOiB,KAAMjB,IAAOkB,WAClDpB,GAAY,sBAAMC,UAAWiB,IAAIhB,IAAOiB,KAAMjB,IAAOmB,kB,iBCjC7CC,EAfmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,qBAAKtB,UAAWC,IAAOsB,KAAvB,SAC9CD,EAAME,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAEEhC,GAAIgC,EAAKhC,GACTC,KAAM+B,EAAK/B,KACXC,KAAM8B,EAAK9B,KACXE,MAAO4B,EAAK5B,MACZD,OAAQ6B,EAAK7B,OACbE,MAAO2B,EAAKC,IACZ3B,SAAU0B,EAAKE,QARjB,UACUF,EAAKhC,GADf,cACuBgC,EAAKC,IAD5B,cACqCD,EAAKE,e,iBC4B/BC,EAzB2B,WAS9B,IAAD,yDAAP,GAAO,IART5B,iBAQS,MARG,GAQH,OAPT6B,aAOS,EANTC,iBAMS,aALTC,aAKS,aAJTC,mBAIS,MAJK,GAIL,MAHTC,gBAGS,aAFTC,aAES,MAFD,GAEC,MADTC,gBACS,MADE,aACF,EACT,OACE,0BACEnC,UAAWiB,IACT,CAAChB,IAAOmC,SAAUpC,GADN,eAETC,IAAO8B,MAAQA,IAEpBC,YAAaA,EACbF,SAAUA,EACVG,SAAUA,EACVC,MAAOA,EACPC,SAAU,SAAAE,GAAG,OAAIF,EAASE,EAAIC,OAAOJ,WCjC9BK,EAAO,a,YCOPC,EAAiB,SAACC,GAC9B,IAAIlB,EAA8B,KAElC,GAA2B,kBAAhBkB,EACV,OAAOlB,EAGR,IAECA,EAAOmB,YAAOD,EAAYE,QAAQ,SAAU,KAE7C,MAAOC,GACNC,QAAQd,MAAM,0BAA2Ba,GAG1C,OAAOrB,G,iBCiBOuB,EAxBqC,SAAC,GAAyB,IAAD,IAAtBC,gBAAsB,MAAXR,EAAW,ICNtE,YAKO,IAAD,IAJTS,oBAIS,MAJM,GAIN,MAHTC,oBAGS,aAFTC,gBAES,MAFE,kBAAM,GAER,MADTC,qBACS,MADOZ,EACP,IACiBa,mBAASJ,GAD1B,mBACFd,EADE,KACKmB,EADL,OAEiBD,mBAASH,GAF1B,mBAEFlB,EAFE,KAEKuB,EAFL,KAoBT,MAAO,CACHpB,QACAH,QACAwB,YAnBgBC,uBAChB,SAACtB,GACG,IAAMuB,EAAaP,EAAShB,GACvBuB,GACDN,EAAcjB,GAGlBmB,EAASnB,GACToB,EAASG,KAEb,CACIP,EACAC,KDVNO,CAAS,CACXR,SAAU,SAAAhB,GAAK,OAA8B,OAA1BM,EAAeN,IAAkB,qBACpDiB,cAAe,SAAAjB,GAAK,OAAIa,EAASP,EAAeN,OALhDA,EAFyE,EAEzEA,MACAH,EAHyE,EAGzEA,MACAwB,EAJyE,EAIzEA,YAMF,OACE,sBAAKvD,UAAWC,IAAO6C,cAAvB,UACE,cAAC,EAAD,CACE9C,UAAWiB,IAAIhB,IAAO0D,OACtB3B,YAAY,yBACZE,MAAOA,EACPH,QAASA,EACTI,SAAUoB,MAERxB,GAAS,sBAAM/B,UAAWC,IAAO2D,eAAxB,SAAyC7B,Q,iBEwB5D,SAAS8B,EAAOC,EAAeC,GAC7B,IAAMC,EAAO,YAAOD,GAwCpB,OArCAA,EAAQE,SAAQ,SAACC,GACf,IAAMC,EAAWC,YAAKN,GAAU,SAACO,GAAD,OAAYA,EAAEC,MAAQJ,EAAQI,OAEzDH,EAIuB,IAAnBA,EAAStE,OAAiC,IAAlBqE,EAAQrE,QACvCqE,EAAQrE,MAAQ,EAChBmE,EAAQO,KAAR,2BACKL,GADL,IAEExC,KAAK,MAPPwC,EAAQxC,KAAM,KAclBoC,EAASG,SAAQ,SAACE,GAChB,IAAMD,EAAUE,YAAKL,GAAS,SAACM,GAAD,OAAYA,EAAEC,MAAQH,EAASG,OAExDJ,EAOuB,IAAnBC,EAAStE,OAAiC,IAAlBqE,EAAQrE,OACvCmE,EAAQO,KAAR,2BACKJ,GADL,IAEEtE,MAAO,EACP8B,QAAQ,KAVVqC,EAAQO,KAAR,2BACKJ,GADL,IAEExC,QAAQ,QAaPqC,EAAQQ,MAAK,SAACC,EAAGC,GAAJ,OAAWC,OAAOF,EAAE9E,MAAQgF,OAAOD,EAAE/E,OAAWgF,OAAOF,EAAEH,KAAOK,OAAOD,EAAEJ,QAGhFM,MA/FW,WAAM,MAEJxB,mBAAc,IAFV,mBAEvByB,EAFuB,KAEhBC,EAFgB,OAGJ1B,mBAAc,IAHV,mBAGvB2B,EAHuB,KAGhBC,EAHgB,KAKxBC,EAAY,uCAAG,WAAOC,EAAe3D,GAAtB,mBAAAkD,EAAA,6DACnB5B,QAAQsC,IAAI,OAAQ5D,GAEd6D,EAAgB7D,EAAKD,MAAM+D,QAC/B,SAACC,EAAMC,GAAP,mBAAC,eACID,GADL,kBAEGC,EAAI,GAAKA,EAAI,OAEhB,IARiB,SAWEC,IAAMC,KAAK,YAAa,CAAEC,IAAKnE,EAAKD,MAAME,KAAI,SAAAmE,GAAC,OAAIA,EAAE,QAXvD,OAWbC,EAXa,OAYbC,EAAcD,EAAOE,KAAKA,KAAKtE,KAAI,SAACC,GAExC,OADAA,EAAK5B,MAAQuF,EAAS3D,EAAK6C,KACpB7C,KAEToB,QAAQsC,IAAI,cAAeU,GAEb,IAAVX,GACFJ,EAASe,GACLd,EAAMgB,QACRf,EAASnB,EAAOgC,EAAad,KAGd,IAAVG,IACPF,EAASa,GACLhB,EAAMkB,QACRf,EAASnB,EAAOgB,EAAOgB,KA3BR,2CAAH,wDAgClB,OACE,sBAAK7F,UAAWC,IAAO+F,kBAAvB,UACE,sBAAKhG,UAAWC,IAAOgG,cAAvB,UACE,cAAC,EAAD,CAAelD,SAAU,SAAAxB,GAAI,OAAI0D,EAAa,EAAG1D,MACjD,cAAC,EAAD,CAAMD,MAAOuD,OAEf,gCACE,cAAC,EAAD,CAAe9B,SAAU,SAAAxB,GAAI,OAAI0D,EAAa,EAAG1D,MACjD,cAAC,EAAD,CAAMD,MAAOyD,W,iBC5CNmB,EAPH,kBACV,sBAAKlG,UAAWC,IAAOiG,IAAvB,UACE,oBAAIlG,UAAWC,IAAOkG,MAAtB,mCACA,cAAC,EAAD,QCOWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cbd7e3b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckCodeInput\":\"DeckCodeInput_DeckCodeInput__3qdNe\",\"Input\":\"DeckCodeInput_Input__2gG9Z\",\"InputErrorHint\":\"DeckCodeInput_InputErrorHint__2fmgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"TextArea_textarea__1dygG\",\"error\":\"TextArea_error__3swG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deckDiffContainer\":\"DeckDiffContainer_deckDiffContainer__mXjKY\",\"deckContainer\":\"DeckDiffContainer_deckContainer__we-Em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"Title\":\"App_Title__274rc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deck\":\"Deck_deck__1_MdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBrief\":\"CardBrief_cardBrief__2pgcS\",\"cardDetail\":\"CardBrief_cardDetail__2PVg1\",\"name\":\"CardBrief_name__1G0cI\",\"info\":\"CardBrief_info__3Mcow\",\"count\":\"CardBrief_count__1vIB0\",\"img\":\"CardBrief_img__2C9-G\",\"mask\":\"CardBrief_mask__tl8UJ\",\"addMask\":\"CardBrief_addMask__3NNQH\",\"removeMask\":\"CardBrief_removeMask__2ML6i\"};","export enum Rarity {\n  COMMON = 1,\n  EPIC = 4,\n  LEGENDARY = 5,\n  RARE = 3,\n}\n","import React from 'react';\nimport cls from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Rarity } from '../constants/Rarity';\n\nimport styles from './CardBrief.module.scss';\n\nexport interface CardBriefProps {\n  id: string;\n  name: string;\n  cost: number;\n  count: number;\n  rarity: Rarity;\n  isAdd?: boolean;\n  isDelete?: boolean;\n}\n\nconst RARITY_COLORS: Record<Rarity, string> = {\n  [Rarity.COMMON]: '#858585',\n  [Rarity.EPIC]: '#644c82',\n  [Rarity.RARE]: '#315376',\n  [Rarity.LEGENDARY]: '#855c25',\n};\n\nconst CardBrief: React.FC<CardBriefProps> = ({\n  id,\n  name,\n  cost,\n  rarity,\n  count = 1,\n  isAdd = false,\n  isDelete = false\n}) => {\n  return (\n    <div\n     className={styles.cardBrief}\n     data-for={`card-detail-${id}`}\n     data-tip\n     data-class={styles.cardDetail}\n     style={{\n       backgroundImage: `url(https://art.hearthstonejson.com/v1/tiles/${id}.png)`\n     }}\n    >\n      <ReactTooltip\n        id={`card-detail-${id}`}\n        place=\"right\"\n        type=\"light\"\n        effect=\"float\" \n        getContent={() => <img src={`https://art.hearthstonejson.com/v1/render/latest/zhCN/256x/${id}.png`} alt=\"card\" />}\n      />\n      <span className={styles.name}>{name}</span>\n      <span\n       className={styles.info}\n       style={{ backgroundColor: RARITY_COLORS[rarity] }}\n      >{cost}</span>\n      { count > 1 && <span className={styles.count}>{count}</span>}\n      {isAdd && <span className={cls(styles.mask, styles.addMask)}></span>}\n      {isDelete && <span className={cls(styles.mask, styles.removeMask)}></span>}\n    </div>\n  );\n};\n\nexport default CardBrief;\n","import React from 'react';\nimport CardBrief from './CardBrief';\n\nimport styles from './Deck.module.scss';\n\nimport type { Card } from '../types';\nexport interface DeckProps {\n  cards: Card[];\n}\n\nconst Deck: React.FC<DeckProps> = ({ cards }) => <div className={styles.deck}>\n  {cards.map(card => (\n    <CardBrief\n      key={`${card.id}-${!!card.add}-${!!card.delete}`}\n      id={card.id}\n      name={card.name}\n      cost={card.cost}\n      count={card.count}\n      rarity={card.rarity}\n      isAdd={card.add}\n      isDelete={card.delete}\n    />\n  ))}\n</div>;\n\nexport default Deck;\n","import React from 'react';\nimport cls from 'classnames';\n\nimport styles from './TextArea.module.scss';\n\nexport interface TextAreaProps {\n  className?: string;\n  defaultValue?: string;\n  disabled?: boolean;\n  error?: boolean;\n  placeholder?: string;\n  readOnly?: boolean;\n  value?: string;\n  onChange?: (value: string) => void;\n}\n\nconst TextArea: React.FC<TextAreaProps> = ({\n  className = '',\n  defaultValue = '',\n  disabled = false,\n  error = true,\n  placeholder = '',\n  readOnly = false,\n  value = '',\n  onChange = () => { },\n} = {}) => {\n  return (\n    <textarea\n      className={cls(\n        [styles.textarea, className],\n        { [styles.error]: error }\n      )}\n      placeholder={placeholder}\n      disabled={disabled}\n      readOnly={readOnly}\n      value={value}\n      onChange={evt => onChange(evt.target.value)}\n    />\n  )\n};\n\nexport default TextArea;\n","/**\n * noop function\n */\nexport const noop = () => {};","import { decode, DeckDefinition } from 'deckstrings';\n\n/**\n * AAEBAQcAAAQBAwIDAwMEAw==\n * {\n *    cards: [[1, 3], [2, 3], [3, 3], [4, 3]], // [dbfid, count] pairs\n *    heroes: [7], // Garrosh Hellscream\n *    format: 1, \n * }\n */\nexport const decodeDeckCode = (deckCodeStr: string) => {\n\tlet deck: DeckDefinition | null = null;\n\n\tif (typeof deckCodeStr !== 'string') {\n\t\treturn deck;\n\t}\n\n\ttry {\n\t\t// trim comment which starts with '#'\n\t\tdeck = decode(deckCodeStr.replace(/^#.*/gm, ''));\n\t}\n\tcatch (ex) {\n\t\tconsole.error('decode deck code error:', ex);\n\t}\n\n\treturn deck;\n};","import React from 'react';\nimport cls from 'classnames';\n\nimport TextArea from '../ui/TextArea';\n\nimport { useInput } from '../hooks/useInput';\n\nimport { decodeDeckCode } from '../utils/decodeDeckCode';\nimport { noop } from '../utils/noop';\n\nimport styles from './DeckCodeInput.module.scss';\n\nimport type { DeckDefinition } from 'deckstrings';\n\nexport interface DeckCodeInputProps {\n  onDecode?: (deck: DeckDefinition) => void;\n}\n\nconst DeckCodeInput: React.FC<DeckCodeInputProps> = ({ onDecode = noop }) => {\n  const {\n    value,\n    error,\n    handleInput\n  } = useInput({\n    validate: value => decodeDeckCode(value) === null ? 'invalid deck code' : false,\n    onValidChange: value => onDecode(decodeDeckCode(value) as DeckDefinition),\n  });\n\n  return (\n    <div className={styles.DeckCodeInput}>\n      <TextArea\n        className={cls(styles.Input)}\n        placeholder=\"Please input deck code\"\n        value={value}\n        error={!!error}\n        onChange={handleInput}\n      />\n      { !!error && <span className={styles.InputErrorHint}>{error}</span>}\n    </div>\n  )\n};\n\nexport default DeckCodeInput;\n","import { useState, useCallback } from 'react';\nimport { noop } from '../utils/noop';\n\nexport type UseInputErrorType = string | false;\n\nexport interface UseInput {\n    initialValue?: string;\n    initialError?: UseInputErrorType;\n    validate?: (value: string) => UseInputErrorType;\n    onValidChange?: (value: string) => void;\n}\n\nexport function useInput({\n    initialValue = '',\n    initialError = false,\n    validate = () => false,\n    onValidChange = noop,\n}: UseInput) {\n    const [value, setValue] = useState(initialValue);\n    const [error, setError] = useState(initialError);\n\n    const handleInput = useCallback(\n        (value: string) => {\n            const validation = validate(value);\n            if (!validation) {\n                onValidChange(value);\n            }\n\n            setValue(value);\n            setError(validation);\n        },\n        [\n            validate,\n            onValidChange\n        ]\n    );\n\n    return {\n        value,\n        error,\n        handleInput\n    };\n}\n","import { useState } from 'react';\nimport { find } from 'lodash-es';\nimport axios from 'axios';\nimport { DeckDefinition } from 'deckstrings';\n\nimport Deck from './Deck';\nimport DeckCodeInput from './DeckCodeInput';\n\nimport styles from './DeckDiffContainer.module.scss';\n\nconst DeckDiffContainer = () => {\n  // const [decks, dispatchDecks] = useReducer(() => ({}));\n  const [deck1, setDeck1] = useState<any>([]);\n  const [deck2, setDeck2] = useState<any>([]);\n\n  const handleDecode = async (index: number, deck: DeckDefinition) => {\n    console.log('deck', deck);\n\n    const countMap: any = deck.cards.reduce(\n      (prev, cur) => ({\n        ...prev,\n        [cur[0]]: cur[1]\n      }),\n      {}\n    );\n\n    const result = await axios.post('/card/get', { ids: deck.cards.map(i => i[0]) });\n    const parsedCards = result.data.data.map((card: any) => {\n      card.count = countMap[card.uid];\n      return card;\n    });\n    console.log('parsedCards', parsedCards);\n\n    if (index === 0) {\n      setDeck1(parsedCards);\n      if (deck2.length) {\n        setDeck2(reDiff(parsedCards, deck2))\n      }\n    }\n    else if (index === 1) {\n      setDeck2(parsedCards);\n      if (deck1.length) {\n        setDeck2(reDiff(deck1, parsedCards))\n      }\n    }\n  };\n\n  return (\n    <div className={styles.deckDiffContainer}>\n      <div className={styles.deckContainer}>\n        <DeckCodeInput onDecode={deck => handleDecode(0, deck)} />\n        <Deck cards={deck1 as any} />\n      </div>\n      <div>\n        <DeckCodeInput onDecode={deck => handleDecode(1, deck)} />\n        <Deck cards={deck2 as any} />\n      </div>\n    </div>\n  );\n};\n\nfunction reDiff(baseDeck: any, curDeck: any) {\n  const newDeck = [...curDeck];\n  \n  // find add\n  curDeck.forEach((curCard: any) => {\n    const baseCard = find(baseDeck, (t: any) => t.uid === curCard.uid);\n    // 原来的没有这张卡\n    if (!baseCard) {\n      curCard.add = true;\n    }\n    // 原来有一张，现在两张\n    else if (baseCard.count === 1 && curCard.count === 2) {\n      curCard.count = 1;\n      newDeck.push({\n        ...curCard,\n        add: true,\n      });\n    }\n\n    // find delete\n  });\n\n  baseDeck.forEach((baseCard: any) => {\n    const curCard = find(curDeck, (t: any) => t.uid === baseCard.uid);\n    // 原来有，现在没有\n    if (!curCard) {\n      newDeck.push({\n        ...baseCard,\n        delete: true\n      });\n    }\n    // 原来有两张，现在有一张\n    else if (baseCard.count === 2 && curCard.count === 1) {\n      newDeck.push({\n        ...baseCard,\n        count: 1,\n        delete: true\n      });\n    }\n  });\n\n  return newDeck.sort((a, b) => (Number(a.cost) - Number(b.cost)) || (Number(a.uid) - Number(b.uid)));;\n}\n\nexport default DeckDiffContainer;\n","import React from 'react';\nimport DeckDiffContainer from './components/DeckDiffContainer';\nimport styles from './App.module.scss';\n\nconst App = () => (\n  <div className={styles.App}>\n    <h1 className={styles.Title}>Hearthstone deck diff</h1>\n    <DeckDiffContainer />\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}